以下是优化后的代码片段：

```json
{
  "MD013": false,
  "MD033": false
}
```

以下是实现登录流程的伪代码：

```javascript
// 用户登录流程
function login(username, password) {
  // 1. 验证用户名和密码是否为空
    return "用户名和密码不能为空";
  }

  // 2. 查询数据库，校验用户名和密码是否匹配
  const user = database.findUserByUsername(username);
  if (!user || user.password !== password) {
    return "用户名或密码错误";
  }

  // 3. 校验用户是否为管理员
  if (user.isAdmin) {
    return "登录成功，您是管理员";
  } else {
    return "登录成功，您不是管理员";
  }
}

// 数据库查询函数
function findUserByUsername(username) {
  // 模拟数据库查询
  const users = [
    { username: "admin", password: "admin123", isAdmin: true },
    { username: "user1", password: "password1", isAdmin: false }
  ];
  return users.find(user => user.username === username);
}
```

以下是实现快速排序算法的 Python 伪代码：

```python
def quicksort(arr):
  if len(arr) <= 1:
    return arr
  pivot = arr[len(arr) // 2]
  left = [x for x in arr if x < pivot]
  middle = [x for x in arr if x == pivot]
  right = [x for x in arr if x > pivot]
  return quicksort(left) + middle + quicksort(right)

# 示例用法
arr = [3, 6, 8, 10, 1, 2, 1]
sorted_arr = quicksort(arr)
print(sorted_arr)  # 输出: [1, 1, 2, 3, 6, 8, 10]
```

以上是优化后的代码片段和扩展功能的伪代码示例。请根据需要选择使用。